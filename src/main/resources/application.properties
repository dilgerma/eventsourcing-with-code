# Kafka producer properties
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://localhost:8081
spring.kafka.producer.properties.value.subject.name.strategy=io.confluent.kafka.serializers.subject.TopicRecordNameStrategy

spring.kafka.properties.schema.registry.url=http://localhost:8081


# Kafka consumer properties
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=my-consumer-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://localhost:8081
spring.kafka.consumer.properties.value.subject.name.strategy=io.confluent.kafka.serializers.subject.TopicRecordNameStrategy


spring.kafka.streams.application-id=foo1
spring.kafka.admin.auto-create=true
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.kafka.streams.properties.schema.registry.url=http://localhost:8081


spring.kafka.streams.properties.value.subject.name.strategy=io.confluent.kafka.serializers.subject.TopicRecordNameStrategy
spring.kafka.streams.properties.key.subject.name.strategy=io.confluent.kafka.serializers.subject.TopicRecordNameStrategy


# H2 Configuration
# DataSource Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Flyway Configuration
spring.flyway.url=jdbc:postgresql://localhost:5432/postgres
spring.flyway.locations=classpath:db/migration
spring.flyway.user: postgres
spring.flyway.password: postgres


open-ai.mock=true
open-ai.token=<token>
open-ai.url=https://api.openai.com/v1/chat/completions
